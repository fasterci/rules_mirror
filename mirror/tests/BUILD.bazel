load("@io_bazel_rules_go//go:def.bzl", "go_test")
load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@com_adobe_rules_gitops//skylib/kustomize:kustomize.bzl", "kustomize")
load("//mirror:defs.bzl", "mirror_image")
load("@com_adobe_rules_gitops//gitops:defs.bzl", "k8s_deploy", "k8s_test_setup")
load("@com_adobe_rules_gitops//skylib:push.bzl", "k8s_container_push")
load(":lrf.bzl", "list_runfiles")

mirror_image(
    name = "agnhost",
    digest = "sha256:93c166faf53dba3c9c4227e2663ec1247e2a9a193d7b59eddd15244a3e331c3e",
    dst_prefix = "us-central1-docker.pkg.dev/rules-gitops-demo/it/mirror",
    src_image = "registry.k8s.io/e2e-test-images/agnhost:2.39",
    visibility = ["//visibility:public"],
)

k8s_container_push(
    name = "agnhost_push",
    image = ":agnhost",
    registry = "gcr.io/fasterci-dev",
)

kustomize(
    name = "kustomize1",
    testonly = True,
    images = [
        ":agnhost",
    ],
    manifests = [
        "deployment.yaml",
    ],
    namespace = "",
)

diff_test(
    name = "deployment_image_test",
    file1 = ":kustomize1",
    file2 = "kustomize1.golden",
)

# use k8s_deploy with mirrored image
k8s_deploy(
    name = "simple_server",
    images = [
        ":agnhost",
    ],
    manifests = [
        "deployment.yaml",
        "service.yaml",
    ],
    namespace = "{BUILD_USER}",
)

list_runfiles(
    name = "lrf",
    data = [":simple_server.apply"],
)

# use k8s_deploy in IT test
k8s_test_setup(
    name = "simple_server_it.setup",
    kubeconfig = "@k8s_test//:kubeconfig",
    objects = [
        ":simple_server",
    ],
)

go_test(
    name = "tests_test",
    size = "large",
    srcs = ["simple_server_test.go"],
    args = [
        "-setup",
        "$(location :simple_server_it.setup)",
    ],
    data = [":simple_server_it.setup"],
    rundir = ".",
    deps = ["@com_github_adobe_rules_gitops//testing/it_sidecar/client:go_default_library"],
)
