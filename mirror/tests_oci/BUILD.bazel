load("@io_bazel_rules_go//go:def.bzl", "go_test")
load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@rules_gitops//skylib/kustomize:kustomize.bzl", "kustomize")
load("@rules_gitops//gitops:defs.bzl", "k8s_deploy", "k8s_test_setup")
load("@rules_gitops//push_oci:push_oci.bzl", "push_oci")

push_oci(
    name = "agnhost_push",
    image = "//mirror/tests:agnhost",
    repository = "us-central1-docker.pkg.dev/rules-gitops-demo/it",  # this registry is no op if the iamge parameter refers to a pushed image (mirror or k8s_container_push target)
)

kustomize(
    name = "kustomize1",
    testonly = True,
    images = [
        "//mirror/tests:agnhost",
    ],
    manifests = [
        "deployment.yaml",
    ],
    namespace = "",
)

diff_test(
    name = "deployment_image_test",
    file1 = ":kustomize1",
    file2 = "kustomize1.golden",
)

# use k8s_deploy with mirrored image
k8s_deploy(
    name = "simple_server",
    cluster = "gke_rules-gitops-demo_us-central1_cluster-demo",
    gitops = False,
    images = [
        "//mirror/tests:agnhost",
    ],
    manifests = [
        "deployment.yaml",
        "service.yaml",
    ],
    namespace = "{BUILD_USER}",
    user = "gke_rules-gitops-demo_us-central1_cluster-demo",
)

# use k8s_deploy in IT test
k8s_test_setup(
    name = "simple_server_it.setup",
    kubeconfig = "@k8s_test//:kubeconfig",
    objects = [
        ":simple_server",
    ],
)

go_test(
    name = "tests_oci_test",
    size = "large",
    srcs = ["simple_server_test.go"],
    args = [
        "-setup",
        "$(location :simple_server_it.setup)",
    ],
    data = [":simple_server_it.setup"],
    rundir = ".",
    deps = ["@com_github_adobe_rules_gitops//testing/it_sidecar/client:go_default_library"],
)
